export PS1="[\[\e[34;1m\]\u@\[\e[0m\]\[\e[32;1m\]\H\e[0m\]\[\e[31;1m\] \w\[\e[0m\]]\\$ "
1、规范目录
mkdir -p /server/tools
mkdir -p /server/scripts
2、配置所有主机域名解析
cat > /etc/hosts<<EOF
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
172.16.1.5 lb01
172.16.1.6 lb02
172.16.1.6 web01
172.16.1.7 web02
172.16.1.8 web03
172.16.1.31  nfs01
172.16.1.41  backup
172.16.1.51  db01 db01.etiantian.org
172.16.1.61  m01
EOF

3、修改主机名
hostnamectl set-hostname backup

4、跟新yum源信息
curl -s -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo
curl -s -o /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo

5、安全优化
sed -i s#SELINUX=.*#SELINUX=disabled#g' /etc/selinux/config
sed -i  's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config
grep SELINUX=disabled /etc/selinux/config
setenforce 0
getenforce

systemctl disable firewalld
systemctl stop firewalld

6、精简开机启动程序
systemctl list-unit-files |grep enable | egrep -v "sshd.service|crond.service|sysstat|rsyslog|^NetworkManager.service|irqbalance.service"|awk '{print "systemctl disable",$1}'|bash

systemctl list-unit-files | grep enable

netstat -lntup

7、设置普通用户提权操作
useradd cj
echo passw0rd | passwd --stdin cj
\cp /etc/sudoers /etc/sudoers.ori
echo "cj ALL=(ALL) NOPASSWD: ALL " >> /etc/sudoers
tail -1 /etc/sudoers
visudo -c

8、设置系统字符集
centos6
	/etc/sysconfig/i18n
centos7
	/etc/locale.conf

cp  /etc/locale.conf /etc/locale.conf.ori
cp  /etc/locale.conf{,.bak}
echo 'LANG="zh_CN.UTF-8"' > /etc/locale.conf
source /etc/locale.conf
echo $LANG

localectl set-locale LANG="zh_CN.UTF-8"

9、时间同步
yum install ntpdate -y
/usr/sbin/ntpdate ntp3.aliyun.com
echo '#crond-id-001:time sync by cj' >> /var/spool/cron/root
echo "*/5 * * * * /usr/sbin/ntpdate ntp3.aliyun.com > /dev/null 2>&1" >> /var/spool/cron/root
corntab -l

10、提升命令行操作安全新
echo 'export TMOUT=300' >> /etc/profile
echo 'export HISTSIZE=5' >> /etc/profile
echo 'export HISTFILESIZE=5' >> /etc/profile

11、加大文件描述符
 echo '*  -  nofile  65535'  >> /etc/security/limits.conf

 tail -1 /etc/security/limits.conf
 ulimit -SHn 65535  #临时调整文件描述符
 ulimit -n #查看文件描述符
 ulimit -a

 12、优化系统内核
cat >> /etc/sysctl.conf << EOF
net.ipv4.tcp_fin_timeout = 2
net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_tw_recycle = 1
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_keepalive_time = 600
net.ipv4.ip_local_port_range = 4000
net.ipv4.tcp_max_syn_backlog = 16384
net.ipv4.tcp_max_tw_buckets =36000
net.ipv4.route.gc_timeout = 100
net.ipv4.tcp_syn_retries = 1
net.ipv4.tcp_synack_retries = 1 
net.core.somaxconn = 16384
net.core.netdev_max_backlog = 16384
net.ipv4.tcp_max_orphans =16384
#以下参数是对iptables防火墙的优化，防火墙不开会提示，可以忽略不理。
net.nf_conntrack_max = 25000000
net.netfilter.nf_conntrack_max = 25000000
net.netfilter.nf_conntrack_tcp_timeout_established = 180
net.netfilter.nf_conntrack_tcp_timeout_time_wait = 120
net.netfilter.nf_conntrack_tcp_timeout_close_wait = 60
net.netfilter.nf_conntrack_tcp_timeout_fin_wait = 120
net.core.wmem_default = 8388608
net.core.wmem_max = 16777216
net.core.rmem_default = 8388608
net.core.rmem_max = 16777216
EOF
sysctl -p

13、安装系统常用软件
centos6 和 centos7 都要安装的企业运维常用基础工具包
yum install tree nmap dos2unix lrzsz nc lsof wget tcpdump htop iftop iotop sysstat nethogs -y
centos7 要 安装的企业运维常用基础工具包
yum install psmisc net-tools bash-completion vim-enhanced -y

14、优化ssh远程连接效率
禁止root远程连接
修改默认22端口，改为52113
监听内网服务器IP
\cp /etc/ssh/sshd_config{,.ori}
#修改端口
sed -i -e "17s/.*/Port 55522/g"  /etc/ssh/sshd_config
#修改ssh监听的默认ip地址
sed -i -e "19s/.*/ListenAddress 192.168.16.0\/24/g"  /etc/ssh/sshd_config
# 禁止root直接登录
sed -i -e "38s/.*/PermitRootLogin no/g"  /etc/ssh/sshd_config
# 禁止空密码用户登录
sed -i -e "64s/.*/PermitEmptyPasswords no/g"  /etc/ssh/sshd_config

centos6修改：
反解DNS
UseDNS yes --> UseDNS no
ssh连接慢修改
GSSAPIAuthentication yes --> GSSAPIAuthentication no

15、修改系统提示符
bak  /etc/profile
echo  'export PS1="[\[\e[34;1m\]\u@\[\e[0m\]\[\e[32;1m\]\H\e[0m\]\[\e[31;1m\] \w\[\e[0m\]]\\$ "' >> /etc/profile

16、定义系统别名
echo "alias grep = 'grep --color=auto'" >> /etc/profile
echo "alias ll = 'ls -l --color=auto --time-style=long-iso'"  >> /etc/profile
source /etc/profile

17、修改yum.conf文件配置信息
保留yum安装包
/etc/yum.conf
keepcache=1

锁定关键系统文件，如/etc/passwd, /etc/shadow, /etc/group, /etc/gshadow, /etc/inittab, 
处理以上内容后把chattr、lsattr改名为oldboy，转移走，保证安全。

清空/etc/issue, /etc/issue.net, 去除系统及内核版本登录前的屏幕显示。

清空多余的虚拟账号
bin:x:1:1:bin:/bin:/sbin/nologin
阿帕奇的默认账号：daemon:x:2:2:daemon:/sbin:/sbin/nologin
adm:x:3:4:adm:/var/adm:/sbin/nologin
打印：lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin
sync:x:5:0:sync:/sbin:/bin/sync
shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown
halt:x:7:0:halt:/sbin:/sbin/halt
邮件：mail:x:8:12:mail:/var/spool/mail:/sbin/nologin
operator:x:11:0:operator:/root:/sbin/nologin
游戏：games:x:12:100:games:/usr/games:/sbin/nologin
ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin
nobody:x:99:99:Nobody:/:/sbin/nologin

为grub引导菜单加密码
禁止主机被ping
打补丁并升级有已知漏洞的软件

systemd-network:x:192:192:systemd Network Management:/:/sbin/nologin
dbus:x:81:81:System message bus:/:/sbin/nologin
polkitd:x:999:998:User for polkitd:/:/sbin/nologin
sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin
postfix:x:89:89::/var/spool/postfix:/sbin/nologin
cj:x:1000:1000::/home/cj:/bin/bash
ntp:x:38:38::/etc/ntp:/sbin/nologin
tcpdump:x:72:72::/:/sbin/nologin




auditd.service                                enabled
autovt@.service                               enabled
=crond.service                                 enabled
dbus-org.freedesktop.NetworkManager.service   enabled
dbus-org.freedesktop.nm-dispatcher.service    enabled
getty@.service                                enabled
=irqbalance.service                            enabled
kdump.service                                 enabled
lvm2-monitor.service                          enabled
microcode.service                             enabled
NetworkManager-dispatcher.service             enabled
NetworkManager-wait-online.service            enabled
=NetworkManager.service                        enabled
postfix.service                               enabled
rhel-autorelabel.service                      enabled
rhel-configure.service                        enabled
rhel-dmesg.service                            enabled
rhel-domainname.service                       enabled
rhel-import-state.service                     enabled
rhel-loadmodules.service                      enabled
rhel-readonly.service                         enabled
=rsyslog.service                               enabled
=sshd.service                                  enabled
=sysstat.service                               enabled
systemd-readahead-collect.service             enabled
systemd-readahead-drop.service                enabled
systemd-readahead-replay.service              enabled
tuned.service                                 enabled
vgauthd.service                               enabled
vmtoolsd.service                              enabled
dm-event.socket                               enabled
lvm2-lvmetad.socket                           enabled
lvm2-lvmpolld.socket                          enabled
default.target                                enabled
multi-user.target                             enabled
remote-fs.target                              enabled
runlevel2.target                              enabled
runlevel3.target                              enabled
runlevel4.target                              enabled

最小化原则：
1、安装软件包最小化；
2、用户权限最小化 visudo；
3、目录文件权限最小化；
4、自启动服务最小化；
5、服务运行用户最小化；

克隆三台：
B1-web服务器1		10.0.0.7/192.168.16.7		web01
							 172.16.1.7
C1-NFS存储服务器	10.0.0.31/192.168.16.31		nfs01
							 172.16.1.31
C2-rsync备份服务器	10.0.0.41/192.168.16.41		backup
							 172.16.1.41


rsync服务器
ssh如果禁用了root直接登录，rsync无法通过root远程推送文件
rsync -avz -e 'ssh -p 23422' /etc cj@192.168.16.41:/bak/


cat>/etc/rsyncd.conf<<EOF
#rsync_config_______________start
#created by oldboy
#site: http://www.oldboyedu.com
uid = rsync
gid = rsync
use chroot = no
fake super = yes
max connections = 200
timeout = 600 
pid file = /var/run/rsyncd.pid
lock file = /var/run/rsync.lock
log file = /var/log/rsyncd.log
ignore errors
read only = false
list = false
hosts allow = 192.168.16.0/24
hosts deny = 0.0.0.0/32
auth users = rsync_backup
secrets file = /etc/rsync.password
[backup]
comment = welcome to oldboyedu backup!
path = /backup/
EOF

#3)创建用户和备份目录

useradd rsync

id rsync

mkdir -p /backup

chown -R rsync.rsync /backup/

ls -ld /backup/

#4）启动和检查

systemctl start rsyncd

systemctl enable rsyncd

systemctl status rsyncd

ps -ef|grep sync|grep -v grep  #检查进程

netstat -lntup|grep 873        #检查端口

#5）配置密码文件

echo "rsync_backup:oldboy" > /etc/rsync.password

chmod 600 /etc/rsync.password

cat /etc/rsync.password

ls -l /etc/rsync.password

#rsync服务端配置完成。

#最终脚本路径/server/scripts/install_rsync_server.sh，需提前测试成功。
kk
作者：放手吧_e512
链接：https://www.jianshu.com/p/089bcee16369
来源：简书
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。

rsyncrsync -avz /etc rsync_backup@192.168.16.41::backup --pass word-file=/etc/rsync.password


00 00 * * * /bin/sh /server/scripts/bak.sh >/dev/null 2>&1
#bak.sh
#!/bin/bash
export PATH="/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin"
export RSYNC_PASSWORD=passw@rd
IP=$(hostname -i)
! [ -d /backup/$IP ] && mkdir -p /backup/$IP
#1. local backup
/usr/bin/tar zchf /backup/$IP/$(hostname)_$(date +week%w-%F).tar.gz  /etc /var/log /var/spool/cron/root /server/scripts  &>/dev/null &&\
touch /backup/$IP/$(hostname)_$(date +week%w-%F).md5 &&\
find /backup -type f -name "$(hostname)_$(date +week%w-%F)*.gz" | xargs md5sum > /backup/$IP/$(hostname)_$(date +week%w-%F).md5 &&\
md5sum /backup/$IP/$(hostname)_$(date +week%w-%F).md5 > /backup/$IP/$(hostname)_$(date +week%w-%F).md6 &&\
#2. delete
#find  /backup/ -type f  -name "*.tar.gz"  -mtime +7 | xargs rm -f &&\
find  /backup/ -type f  -name "*week*"  -mtime +7 | xargs rm -f &&\
#3. push
#rsync -az /backup/ rsync_backup@192.168.23.41::backup  --password-file=/etc/rsync.password &>/dev/null
rsync -az /backup/ rsync_backup@192.168.23.41::backup  &>/dev/null


备份服务器backup上，保留最近7天备份数据，同时保留6个月内每周一的所有数据副本。
for n in $(seq 1 30) ; do date -s "2020/07/$n" ; /bin/sh /server/scripts/bak.sh; done

#!/bin/sh
export PATH="/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin"
find /backup/  -type f  -name "*week*"  -mtime +180 | xargs rm -f &&\
find /backup/  -type f  ! -name "*week1*" -mtime +7 | xargs rm -f

#!/bin/sh
export PATH="/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin"
if [ $(date +%w) -eq 1 ] then
	:
else
	find /backup/  -type f  -name "*week*"  -mtime +180 | xargs rm -f &&\
	find /backup/  -type f  -name "*week$(date +%w)*" -mtime +7 | xargs rm -f
fi
find /backup/  -type f  -name "*week*"  -mtime +180 | xargs rm -f &&\
find /backup/  -type f  ! -name "*week1*" -mtime +7 | xargs rm -f

#!/bin/bash
Check_Log="/server/scripts/check_backupdata.log_$(date +%F)"
Check_File="find /backup -type f -name "*week*$(date +%F).md*""
$Check_File | xargs md5sum -c | grep FAILED > $Check_Log
REVEL=$?
if [ $REVEL -eq 0 ] then
	mail -s "$(date +%F_%T) backup data error" CJo_126@126.com < $Check_log
fi


如果要接收邮件，需要启动postfix服务
systemctl enable postfix.service
systemctl start postfix.service

#!/bin/bash
export LANG="en_US.UTF-8"
export PATH="/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin"
Check_Log="/var/log/check_rsyncbackupdata.log"
Check_Tmp_Log="/tmp/rsync_check.log"

[ -a $Check_Tmp_Log ] && > $Check_Tmp_Log
for f in $(find /backup/ -type f -name "*week*$(date +%F)*.md*"); do 
	md5sum -c $f 2>&1 >> $Check_Tmp_Log;
done

cat $Check_Tmp_Log >> $Check_Log

grep "FAILED" $Check_Tmp_Log
REVEL=$?
if [ $REVEL -ne 0 ] then
	mail -s "$(date +%F_%T) backup data error" CJo_126@126.com < $Check_Tmp_Log
#	mail -s "$(date +%F_%T) backup data error" root < $Check_Tmp_Log
fi


当前日期 加 3天
date +%F -d "+3day"

当前日期 减 3天
date +%F -d "-3day"
